/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uni.hbarquin.myphotoapp;

import java.awt.image.BufferedImage;
import java.io.File;

/**
 *
 * @author xavier
 */
public class ImageTabSectionWindow extends javax.swing.JPanel {

    /**
     * Creates new form ImageTabSection
     */
    public ImageTabSectionWindow(File file) {
        initComponents();
        getImageObject().setImage(file);
        this.widthValue.setText("Width: " + Integer.toString(getImageObject().getImage().getWidth()) + " px");
        this.heightValue.setText("Height: " + Integer.toString(getImageObject().getImage().getHeight()) + " px");
    }
    
    public ImageTabSectionWindow(ImageProcessing ip) {
        initComponents();
        getImageObject().setImage(ip);
        this.widthValue.setText("Width: " + Integer.toString(getImageObject().getImage().getWidth()) + " px");
        this.heightValue.setText("Height: " + Integer.toString(getImageObject().getImage().getHeight()) + " px");
    }
    
    public ImageTabSectionWindow(BufferedImage bi) {
        initComponents();
        getImageObject().setImage(bi);
        this.widthValue.setText("Width: " + Integer.toString(getImageObject().getImage().getWidth()) + " px");
        this.heightValue.setText("Height: " + Integer.toString(getImageObject().getImage().getHeight()) + " px");
    }
    
    public ImagePrintingWindow getImageObject () {
        return ((ImagePrintingWindow)(imagePanel));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel = new uni.hbarquin.myphotoapp.ImagePrintingWindow();
        imageInfo = new javax.swing.JPanel();
        aColorValue = new javax.swing.JLabel();
        rColorValue = new javax.swing.JLabel();
        gColorValue = new javax.swing.JLabel();
        bColorValue = new javax.swing.JLabel();
        separator1 = new javax.swing.JSeparator();
        xPosValue = new javax.swing.JLabel();
        yPosValue = new javax.swing.JLabel();
        scaleValue = new javax.swing.JLabel();
        separator2 = new javax.swing.JSeparator();
        widthValue = new javax.swing.JLabel();
        heightValue = new javax.swing.JLabel();

        imagePanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                imagePanelMouseMoved(evt);
            }
        });
        imagePanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                imagePanelMouseWheelMoved(evt);
            }
        });

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 768, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );

        imageInfo.setLayout(new javax.swing.BoxLayout(imageInfo, javax.swing.BoxLayout.X_AXIS));

        aColorValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aColorValue.setText("A: X");
        aColorValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        aColorValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aColorValue.setMaximumSize(new java.awt.Dimension(80, 28));
        aColorValue.setMinimumSize(new java.awt.Dimension(80, 28));
        aColorValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(aColorValue);

        rColorValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rColorValue.setText("R: X");
        rColorValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        rColorValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rColorValue.setMaximumSize(new java.awt.Dimension(80, 28));
        rColorValue.setMinimumSize(new java.awt.Dimension(80, 28));
        rColorValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(rColorValue);

        gColorValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gColorValue.setText("G: X");
        gColorValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gColorValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gColorValue.setMaximumSize(new java.awt.Dimension(80, 28));
        gColorValue.setMinimumSize(new java.awt.Dimension(80, 28));
        gColorValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(gColorValue);

        bColorValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bColorValue.setText("B: X");
        bColorValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bColorValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bColorValue.setMaximumSize(new java.awt.Dimension(80, 28));
        bColorValue.setMinimumSize(new java.awt.Dimension(80, 28));
        bColorValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(bColorValue);

        separator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        separator1.setMaximumSize(new java.awt.Dimension(10, 32767));
        separator1.setMinimumSize(new java.awt.Dimension(10, 10));
        separator1.setPreferredSize(new java.awt.Dimension(10, 10));
        imageInfo.add(separator1);

        xPosValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        xPosValue.setText("X: 0");
        xPosValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        xPosValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        xPosValue.setMaximumSize(new java.awt.Dimension(80, 28));
        xPosValue.setMinimumSize(new java.awt.Dimension(80, 28));
        xPosValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(xPosValue);

        yPosValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yPosValue.setText("Y: 0");
        yPosValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        yPosValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        yPosValue.setMaximumSize(new java.awt.Dimension(80, 28));
        yPosValue.setMinimumSize(new java.awt.Dimension(80, 28));
        yPosValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(yPosValue);

        scaleValue.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        scaleValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scaleValue.setText("Scale: 100%");
        scaleValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        scaleValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        scaleValue.setMaximumSize(new java.awt.Dimension(80, 28));
        scaleValue.setMinimumSize(new java.awt.Dimension(80, 28));
        scaleValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(scaleValue);

        separator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        separator2.setMaximumSize(new java.awt.Dimension(10, 32767));
        separator2.setMinimumSize(new java.awt.Dimension(10, 10));
        separator2.setPreferredSize(new java.awt.Dimension(10, 10));
        imageInfo.add(separator2);

        widthValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        widthValue.setText("Width: 256 px");
        widthValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        widthValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        widthValue.setMaximumSize(new java.awt.Dimension(90, 28));
        widthValue.setMinimumSize(new java.awt.Dimension(90, 28));
        widthValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(widthValue);

        heightValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heightValue.setText("Height: 256 px");
        heightValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        heightValue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        heightValue.setMaximumSize(new java.awt.Dimension(90, 28));
        heightValue.setMinimumSize(new java.awt.Dimension(90, 28));
        heightValue.setPreferredSize(new java.awt.Dimension(80, 20));
        imageInfo.add(heightValue);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(imageInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void imagePanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_imagePanelMouseWheelMoved
        float actualPercent = (getImageObject().getScalePercent() * 100);
        scaleValue.setText("Scale: " + Math.rint(actualPercent) + "%");
    }//GEN-LAST:event_imagePanelMouseWheelMoved

    private void imagePanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagePanelMouseMoved
        //Wsize.setText((((ImagePrinting)(imagePanel)).getImage().getRGB(evt.getX(), evt.getY()) & 0xFF) + "");
        //Hsize.setText(((ImagePrinting)(imagePanel)).getImageHeight() + "");
        float actualPercent = getImageObject().getScalePercent();
        int Xvalue = (int) ((evt.getX() - getImageObject().getOrigin().x) / actualPercent);
        int Yvalue = (int) ((evt.getY() - getImageObject().getOrigin().y) / actualPercent);
        if (Xvalue >= 0 && Yvalue >= 0 && Xvalue < getImageObject().getImage().getWidth() && Yvalue < getImageObject().getImage().getHeight()) {
            xPosValue.setText("X: " + Xvalue);
            yPosValue.setText("Y: " + Yvalue);
        
            final int pixel = getImageObject().getImage().getPixel(Xvalue, Yvalue);
            aColorValue.setText("A: " + ((pixel >> 24) & 0xFF));
            rColorValue.setText("R: " + ((pixel >> 16) & 0xFF));
            gColorValue.setText("G: " + ((pixel >> 8) & 0xFF));
            bColorValue.setText("B: " + (pixel & 0xFF));
        }
    }//GEN-LAST:event_imagePanelMouseMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aColorValue;
    private javax.swing.JLabel bColorValue;
    private javax.swing.JLabel gColorValue;
    private javax.swing.JLabel heightValue;
    private javax.swing.JPanel imageInfo;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel rColorValue;
    private javax.swing.JLabel scaleValue;
    private javax.swing.JSeparator separator1;
    private javax.swing.JSeparator separator2;
    private javax.swing.JLabel widthValue;
    private javax.swing.JLabel xPosValue;
    private javax.swing.JLabel yPosValue;
    // End of variables declaration//GEN-END:variables
}
