/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uni.hbarquin.myphotoapp;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author xavier
 */
public class ImagePrintingWindow extends javax.swing.JPanel {

    private ImageProcessing image;
    private int scale = 0;
    private Point origin;
    private Point mousePt;
            
    public ImagePrintingWindow(File file) {
        initComponents();
        origin = new Point(this.getWidth()/2, this.getHeight()/2);
        this.image = new ImageProcessing(file);
        repaint();
    }
    
    public ImagePrintingWindow() {
        initComponents();
    }
    
    public Point getOrigin () {
        return origin;
    }
    
    public float getScalePercent () {
        return (100 + (float) scale)/100;
    }
    
    public void setImage (File file) {
        origin = new Point(this.getWidth()/2, this.getHeight()/2);
        this.image = new ImageProcessing(file);
        repaint();
    }
    
    public void setImage (BufferedImage bi) {
        origin = new Point(this.getWidth()/2, this.getHeight()/2);
        this.image = new ImageProcessing(bi, "");
        repaint();
    }
    
     public void setImage (ImageProcessing ip) {
         origin = new Point(this.getWidth()/2, this.getHeight()/2);
         this.image = new ImageProcessing(ip);
         repaint();
     }
    
    public void paint (Graphics g) {
        super.paint(g);
        Graphics2D g2d = (Graphics2D)g;
        this.image.drawImage(g2d, origin.x, origin.y, image.getWidth() * (100 + scale)/100, image.getHeight() * (100 + scale)/100);
    }
        
    public void increaseImageScale(float n) {
        scale *= n;
        repaint();
    }
    
    public void increaseImageScale() {
        scale *= 2;
        repaint();
    }
    
    public void decreaseImageScale(float n) {
        scale /= n;
        repaint();
    }
    
    public void decreaseImageScale() {
        scale /= 2;
        repaint();
    }
    
    public ImageProcessing getImage () {
        return image;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved
        if (evt.getWheelRotation() < 0 && scale <= -80) {
            return;
        }
        if (evt.getWheelRotation() > 0 && scale >= 100) {
            return;
        }
        scale += (evt.getWheelRotation() * 10);
        repaint();
    }//GEN-LAST:event_formMouseWheelMoved

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int dx = evt.getX() - mousePt.x;
        int dy = evt.getY() - mousePt.y;
        origin.setLocation(origin.x + dx, origin.y + dy);
        mousePt = evt.getPoint();
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        mousePt = evt.getPoint();
        repaint();
    }//GEN-LAST:event_formMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}