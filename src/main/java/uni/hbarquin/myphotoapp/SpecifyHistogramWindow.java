/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uni.hbarquin.myphotoapp;

import java.awt.BorderLayout;
import java.io.File;
import javax.swing.JFileChooser;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author xavie
 */
public class SpecifyHistogramWindow extends javax.swing.JDialog {

    /**
     * Creates new form SpecifyHistogramWindow
     */
    public SpecifyHistogramWindow(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setTitle("Specify Histogram Reference");
        initComponents();
        this.fileChooser = new JFileChooser("D:\\\\Im√°genes");
        this.setLocationRelativeTo(null);
        this.setActualHistograms();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseImageButton = new javax.swing.JButton();
        lblImageSelected = new javax.swing.JLabel();
        actualHistogramPanel = new javax.swing.JPanel();
        actualHistogramAccPanel = new javax.swing.JPanel();
        refHistogramPanel = new javax.swing.JPanel();
        refHistogramAccPanel = new javax.swing.JPanel();
        lblImageRefHistograms = new javax.swing.JLabel();
        lblImageActualHistograms = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        confirmButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        chooseImageButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chooseImageButton.setText("Choose image");
        chooseImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseImageButtonActionPerformed(evt);
            }
        });

        lblImageSelected.setText("No image selected");

        actualHistogramPanel.setPreferredSize(new java.awt.Dimension(250, 200));

        javax.swing.GroupLayout actualHistogramPanelLayout = new javax.swing.GroupLayout(actualHistogramPanel);
        actualHistogramPanel.setLayout(actualHistogramPanelLayout);
        actualHistogramPanelLayout.setHorizontalGroup(
            actualHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        actualHistogramPanelLayout.setVerticalGroup(
            actualHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        actualHistogramAccPanel.setPreferredSize(new java.awt.Dimension(250, 200));

        javax.swing.GroupLayout actualHistogramAccPanelLayout = new javax.swing.GroupLayout(actualHistogramAccPanel);
        actualHistogramAccPanel.setLayout(actualHistogramAccPanelLayout);
        actualHistogramAccPanelLayout.setHorizontalGroup(
            actualHistogramAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        actualHistogramAccPanelLayout.setVerticalGroup(
            actualHistogramAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        refHistogramPanel.setPreferredSize(new java.awt.Dimension(250, 200));

        javax.swing.GroupLayout refHistogramPanelLayout = new javax.swing.GroupLayout(refHistogramPanel);
        refHistogramPanel.setLayout(refHistogramPanelLayout);
        refHistogramPanelLayout.setHorizontalGroup(
            refHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        refHistogramPanelLayout.setVerticalGroup(
            refHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        refHistogramAccPanel.setPreferredSize(new java.awt.Dimension(250, 200));

        javax.swing.GroupLayout refHistogramAccPanelLayout = new javax.swing.GroupLayout(refHistogramAccPanel);
        refHistogramAccPanel.setLayout(refHistogramAccPanelLayout);
        refHistogramAccPanelLayout.setHorizontalGroup(
            refHistogramAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        refHistogramAccPanelLayout.setVerticalGroup(
            refHistogramAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        lblImageRefHistograms.setText("Image reference histogram");

        lblImageActualHistograms.setText("Image actual histogram");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(chooseImageButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblImageSelected)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(lblImageActualHistograms)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblImageRefHistograms)
                .addGap(69, 69, 69))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(actualHistogramAccPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actualHistogramPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refHistogramPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refHistogramAccPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImageSelected))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImageRefHistograms, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblImageActualHistograms, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(actualHistogramPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refHistogramPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(actualHistogramAccPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refHistogramAccPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelButton)
                    .addComponent(confirmButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseImageButtonActionPerformed
        fileChooser.setMultiSelectionEnabled(false);
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            this.image = new ImageProcessing(file);
            this.lblImageSelected.setText(file.getName());
            this.setRefHistograms(this.image);
        }
    }//GEN-LAST:event_chooseImageButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        MainWindow mw = (MainWindow) this.getParent();
        mw.setImageWithNewHistogram(this.image);
        this.dispose();
    }//GEN-LAST:event_confirmButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpecifyHistogramWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpecifyHistogramWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpecifyHistogramWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpecifyHistogramWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SpecifyHistogramWindow dialog = new SpecifyHistogramWindow(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void setActualHistograms () {
        MainWindow mw = (MainWindow) this.getParent();
        ImageProcessing image = mw.getSelectedImage();
        
        this.actualHistogramPanel.removeAll();
        this.actualHistogramAccPanel.removeAll();
        
        ChartPanel oPanel = image.getHistogram().getChartHistogram();
        this.actualHistogramPanel.setLayout(new BorderLayout());
        this.actualHistogramPanel.add(oPanel);
        this.actualHistogramPanel.validate();
        
        oPanel = image.getAccumulateHistogram().getChartHistogram();
        this.actualHistogramAccPanel.setLayout(new BorderLayout());
        this.actualHistogramAccPanel.add(oPanel);
        this.actualHistogramAccPanel.validate();
    }
    
    private void setRefHistograms (ImageProcessing image) {
        this.refHistogramPanel.removeAll();
        this.refHistogramAccPanel.removeAll();
        
        ChartPanel oPanel = image.getHistogram().getChartHistogram();
        this.refHistogramPanel.setLayout(new BorderLayout());
        this.refHistogramPanel.add(oPanel);
        this.refHistogramPanel.validate();
        
        oPanel = image.getAccumulateHistogram().getChartHistogram();
        this.refHistogramAccPanel.setLayout(new BorderLayout());
        this.refHistogramAccPanel.add(oPanel);
        this.refHistogramAccPanel.validate();
    }
    
    private JFileChooser fileChooser;
    private ImageProcessing image;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actualHistogramAccPanel;
    private javax.swing.JPanel actualHistogramPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton chooseImageButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel lblImageActualHistograms;
    private javax.swing.JLabel lblImageRefHistograms;
    private javax.swing.JLabel lblImageSelected;
    private javax.swing.JPanel refHistogramAccPanel;
    private javax.swing.JPanel refHistogramPanel;
    // End of variables declaration//GEN-END:variables
}
